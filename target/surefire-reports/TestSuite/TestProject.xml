<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Emilianos-Mini.localdomain" failures="2" tests="8" name="TestProject" time="33.472" errors="0" timestamp="2020-10-08T16:56:07 UYT">
  <testcase classname="resources.Base" name="@AfterMethod tearDown" time="-1.602186957328E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="resources.Base" name="@BeforeMethod setUp" time="-1.60218695734E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="org.example.LoginPageCases" name="@BeforeMethod basePageNavigation" time="-1.602186957341E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod basePageNavigation -->
  <testcase classname="resources.Base" name="@AfterMethod tearDown" time="-1.602186957343E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="resources.Base" name="@BeforeMethod setUp" time="-1.602186957346E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="resources.Base" name="@AfterMethod tearDown" time="-1.602186957343E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="org.example.LoginPageCases" name="@BeforeMethod basePageNavigation" time="-1.602186957346E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod basePageNavigation -->
  <testcase classname="resources.Base" name="@AfterMethod tearDown" time="-1.602186957356E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="resources.Base" name="@BeforeMethod setUp" time="-1.602186957357E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="resources.Base" name="@BeforeMethod setUp" time="-1.602186957347E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="org.example.LoginPageCases" name="@BeforeMethod basePageNavigation" time="-1.602186957357E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod basePageNavigation -->
  <testcase classname="resources.Base" name="@AfterMethod tearDown" time="-1.602186957358E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="org.example.LoginPageCases" name="@BeforeMethod basePageNavigation" time="-1.60218695736E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod basePageNavigation -->
  <testcase classname="resources.Base" name="@AfterMethod tearDown" time="-1.602186957362E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="org.example.LoginPageCases" name="@BeforeMethod basePageNavigation" time="-1.602186966862E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod basePageNavigation -->
  <testcase classname="resources.Base" name="@AfterMethod tearDown" time="-1.602186966862E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="org.example.LoginPageCases" name="@BeforeMethod basePageNavigation" time="-1.60218696717E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod basePageNavigation -->
  <testcase classname="resources.Base" name="@AfterMethod tearDown" time="-1.602186967171E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="org.example.LoginPageCases" name="loginWithInvalidEmail" time="3.763">
    <failure type="java.lang.NoClassDefFoundError" message="Could not initialize class org.openqa.selenium.WebDriverException">
      <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.openqa.selenium.WebDriverException
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:333)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:451)
at org.openqa.selenium.By$ByXPath.findElement(By.java:394)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325)
at pageObjects.LoginPage.getResultPageElement(LoginPage.java:49)
at pageObjects.LoginPage.LogIn(LoginPage.java:65)
at org.example.LoginPageCases.loginWithInvalidEmail(LoginPageCases.java:57)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- loginWithInvalidEmail -->
  <testcase classname="org.example.LoginPageCases" name="validateLoginFlow" time="3.753">
    <failure type="java.lang.NoClassDefFoundError" message="Could not initialize class org.openqa.selenium.NoSuchElementException">
      <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.openqa.selenium.NoSuchElementException
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:333)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:451)
at org.openqa.selenium.By$ByXPath.findElement(By.java:394)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325)
at pageObjects.LoginPage.getResultPageElement(LoginPage.java:49)
at pageObjects.LoginPage.LogIn(LoginPage.java:65)
at org.example.LoginPageCases.validateLoginFlow(LoginPageCases.java:47)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- validateLoginFlow -->
  <testcase classname="org.example.LoginPageCases" name="loginWithInvalidEmail" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithInvalidEmail -->
  <testcase classname="org.example.LoginPageCases" name="loginWithInvalidEmail" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithInvalidEmail -->
  <testcase classname="org.example.LoginPageCases" name="loginWithInvalidEmail" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithInvalidEmail -->
  <testcase classname="org.example.LoginPageCases" name="validateLoginFlow" time="0.0">
    <skipped/>
  </testcase> <!-- validateLoginFlow -->
  <testcase classname="org.example.LoginPageCases" name="loginWithoutEmailAndPassword" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithoutEmailAndPassword -->
  <testcase classname="org.example.LoginPageCases" name="loginWithInvalidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithInvalidPassword -->
</testsuite> <!-- TestProject -->
