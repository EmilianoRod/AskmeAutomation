<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="0" failed="2" skipped="6">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-10-08T16:55:33 UYT" name="TestSuite" finished-at="2020-10-08T16:56:07 UYT" duration-ms="33472">
    <groups>
    </groups>
    <test started-at="2020-10-08T16:55:33 UYT" name="TestProject" finished-at="2020-10-08T16:56:07 UYT" duration-ms="33472">
      <class name="org.example.LoginPageCases">
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:33 UYT" name="setUp" finished-at="2020-10-08T16:55:47 UYT" duration-ms="13705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:33 UYT" name="setUp" finished-at="2020-10-08T16:55:47 UYT" duration-ms="13705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:33 UYT" name="setUp" finished-at="2020-10-08T16:56:07 UYT" duration-ms="33419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:33 UYT" name="setUp" finished-at="2020-10-08T16:56:06 UYT" duration-ms="33110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="basePageNavigation()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:47 UYT" name="basePageNavigation" finished-at="2020-10-08T16:55:52 UYT" duration-ms="5521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method is-config="true" signature="basePageNavigation()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:47 UYT" name="basePageNavigation" finished-at="2020-10-08T16:55:52 UYT" duration-ms="5498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="loginWithInvalidEmail(java.lang.String, java.lang.String)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:52 UYT" name="loginWithInvalidEmail" data-provider="getDataInvalidEmail" finished-at="2020-10-08T16:55:56 UYT" duration-ms="3763" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[erodriguez@@effectussoftware.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.openqa.selenium.WebDriverException]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.openqa.selenium.WebDriverException
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:333)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:451)
at org.openqa.selenium.By$ByXPath.findElement(By.java:394)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325)
at pageObjects.LoginPage.getResultPageElement(LoginPage.java:49)
at pageObjects.LoginPage.LogIn(LoginPage.java:65)
at org.example.LoginPageCases.loginWithInvalidEmail(LoginPageCases.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidEmail -->
        <test-method signature="validateLoginFlow(java.lang.String, java.lang.String)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:52 UYT" name="validateLoginFlow" data-provider="getData" finished-at="2020-10-08T16:55:56 UYT" duration-ms="3753" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[erodriguez@effectussoftware.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.openqa.selenium.NoSuchElementException]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.openqa.selenium.NoSuchElementException
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:333)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:451)
at org.openqa.selenium.By$ByXPath.findElement(By.java:394)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325)
at pageObjects.LoginPage.getResultPageElement(LoginPage.java:49)
at pageObjects.LoginPage.LogIn(LoginPage.java:65)
at org.example.LoginPageCases.validateLoginFlow(LoginPageCases.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginFlow -->
        <test-method is-config="true" signature="tearDown(java.lang.Integer)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="tearDown" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957328" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:441)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:712)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:283)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:671)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:655)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="setUp" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957340" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="basePageNavigation()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="basePageNavigation" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957341" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="loginWithInvalidEmail(java.lang.String, java.lang.String)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="loginWithInvalidEmail" data-provider="getDataInvalidEmail" finished-at="2020-10-08T16:55:57 UYT" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:441)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:712)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:283)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:671)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:655)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown(java.lang.Integer)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="tearDown" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957343" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(java.lang.Integer)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="tearDown" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957343" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="basePageNavigation()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="basePageNavigation" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957346" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="setUp" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957346" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="setUp" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957347" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithInvalidEmail(java.lang.String, java.lang.String)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="loginWithInvalidEmail" data-provider="getDataInvalidEmail" finished-at="2020-10-08T16:55:57 UYT" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:441)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:712)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:283)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:671)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:655)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown(java.lang.Integer)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="tearDown" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957356" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="basePageNavigation()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="basePageNavigation" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957357" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="setUp" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957357" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown(java.lang.Integer)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="tearDown" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957358" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="loginWithInvalidEmail(java.lang.String, java.lang.String)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="loginWithInvalidEmail" data-provider="getDataInvalidEmail" finished-at="2020-10-08T16:55:57 UYT" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:441)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:712)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:283)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:671)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:655)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidEmail -->
        <test-method is-config="true" signature="basePageNavigation()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="basePageNavigation" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957360" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="validateLoginFlow(java.lang.String, java.lang.String)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="validateLoginFlow" data-provider="getData" finished-at="2020-10-08T16:55:57 UYT" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:441)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:712)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:283)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:671)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:655)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginFlow -->
        <test-method is-config="true" signature="tearDown(java.lang.Integer)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:55:57 UYT" name="tearDown" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186957362" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="loginWithoutEmailAndPassword()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:56:06 UYT" name="loginWithoutEmailAndPassword" finished-at="2020-10-08T16:56:06 UYT" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:441)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:712)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:283)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:671)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:655)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithoutEmailAndPassword -->
        <test-method is-config="true" signature="basePageNavigation()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:56:06 UYT" name="basePageNavigation" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186966862" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method is-config="true" signature="tearDown(java.lang.Integer)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:56:06 UYT" name="tearDown" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186966862" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="basePageNavigation()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:56:07 UYT" name="basePageNavigation" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186967170" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="loginWithInvalidPassword()[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:56:07 UYT" name="loginWithInvalidPassword" finished-at="2020-10-08T16:56:07 UYT" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:441)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:712)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:283)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:671)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:655)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidPassword -->
        <test-method is-config="true" signature="tearDown(java.lang.Integer)[pri:0, instance:org.example.LoginPageCases@723ca036]" started-at="2020-10-08T16:56:07 UYT" name="tearDown" finished-at="1969-12-31T21:00:00 UYT" duration-ms="-1602186967171" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.example.LoginPageCases -->
    </test> <!-- TestProject -->
  </suite> <!-- TestSuite -->
</testng-results>
